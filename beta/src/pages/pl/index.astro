---
import "modern-normalize"
import "styles/global.scss"
import sanityClient from "lib/sanityClient"
import { indexQuery } from "lib/queries"
import { Navigation, Settings } from "lib/interfaces"
// import BaseHead from "components/BaseHead.astro"
import FrontNav from "components/FrontNav.astro"

const response = await sanityClient.fetch(indexQuery)
const data: {
  navigation: Navigation
  settings: Settings
} = await response
const { navigation, settings } = data
const artist = "Knapp"
const year = new Date().getFullYear()
const language = "English"
const locale = ""
---

<html lang="pl" class="background">
  <head>
    <!-- <BaseHead settings={settings} /> -->
  </head>
  <body>
    <main id="site-main">
      <div class="container-fluid">
        <div class="row">
          <div class="col logo">
            <div class="circle">
              <a href={navigation.pl[0].url}>
                <div class="title">
                  <h1>{artist.toUpperCase()}</h1>
                </div>
              </a>
            </div>
          </div>
          <FrontNav navItems={navigation.pl} title={settings.pl.title} />
        </div>
        <div class="row">
          <div class="col">
            <div class="spacer"></div>
          </div>
        </div>
        <div class="row">
          <div class="front-lang">
            <p>
              <a href={`/${locale}`}>{language.toUpperCase()}</a>
            </p>
          </div>
          <div class="front-copy">
            <p>&copy; {year} {settings.pl.title}</p>
          </div>
        </div>
      </div>
    </main>
  </body>
</html>

<style lang="scss">
@use '../../styles/base/colors' as c;
@use '../../styles/base/breakpoints' as b;

::selection {
  background: rgba(c.$sepia-150, 0.3);
}

.background {
  background: c.$grey-950;
}

#site-main {
  min-height: 100vh;
  color: c.$sepia-150;
  background: c.$grey-950;
}

h1 {
  margin-bottom: 0;
  font-size: 7.5vw;
  color: c.$grey-950;
  @include b.mq(lg) {
    font-size: 11vw;
  }
}

.logo {
  position: relative;
  padding-right: 0;
  padding-left: 0;
  @include b.mq(lg) {
    padding: 4em 2em 0;
    font-size: 1vw;
  }
}

.circle {
  position: relative;
  width: 100%;
  background: c.$sepia-150;
  border-radius: 50%;
  &::after {
    display: block;
    padding-bottom: 100%;
    content: '';
  }
}

.spacer {
  position: relative;
  width: 100%;
  &::after {
    display: block;
    padding-bottom: 40%;
    padding-bottom: max(40%, (calc(100vh - (4vh + 96vw + 6rem))));
    content: '';
  }
}

.title {
  position: absolute;
  right: 0.6em;
  bottom: 50%;
  line-height: 0;
  text-align: right;
  @include b.mq(lg) {
    right: 0.5em;
    font-size: 1vw;
  }
}

.front-copy {
  padding: 0 5rem 0 0;
  margin: 0 0 0 auto;
  @include b.mq(lg) {
    align-self: inherit;
    padding: 0.8rem;
  }
  p {
    margin: 0;
    font-size: clamp(1.4rem, 1.8vw, 1.9rem);
    font-weight: 600;
    @include b.mq(sm) {
      font-size: 1.2rem;
    }
  }
}
.front-copy {
  padding: 0 5rem 0 0;
  margin: 0 0 0 auto;
  @include b.mq(lg) {
    align-self: inherit;
    padding: 0.8rem;
  }
  p {
    margin: 0;
    font-size: clamp(1.4rem, 1.8vw, 1.9rem);
    font-weight: 600;
    @include b.mq(sm) {
      font-size: 1.2rem;
    }
  }
}
.front-copy {
  padding: 0 5rem 0 0;
  margin: 0 0 0 auto;
  @include b.mq(lg) {
    align-self: inherit;
    padding: 0.8rem;
  }
  p {
    margin: 0;
    font-size: clamp(1.4rem, 1.8vw, 1.9rem);
    font-weight: 600;
    @include b.mq(sm) {
      font-size: 1.2rem;
    }
  }
}

.front-lang {
  padding: 0 0 0 5rem;
  margin: 0 auto 0 0;
  @include b.mq(lg) {
    align-self: inherit;
    padding: 0.8rem;
  }
  p {
    margin: 0;
    font-size: clamp(1.4rem, 1.8vw, 1.9rem);
    font-weight: 600;
    a {
      color: c.$sepia-150;
    }
    @include b.mq(sm) {
      font-size: 1.2rem;
    }
  }
}

.footer {
  @include b.mq(lg) {
    padding-bottom: 1%;
  }
}
</style>
