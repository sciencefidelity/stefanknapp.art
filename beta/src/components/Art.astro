---
import { urlFor } from "lib/utils"
import { Artwork, Label, Page, Settings } from "lib/interfaces"

const { artworks, labels, page, settings } = Astro.props as {
  artworks: Artwork[]
  labels: Label[]
  page: Page
  settings: Settings
}

const artwork = artworks[0]
---

<section class="gallery-section">
  <div class="gallery">
    <div class="modal">
      <div class="btn btn--prev">
        <img
          alt="Previous image"
          src="data:image/svg+xml,%3Csvg viewBox='0 0 54 104' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M5.15 52.05l48.1 48.1c.8.8.8 2.1 0 2.9-.8.8-2.1.8-2.9 0L.75 53.45c-.8-.8-.8-2.1 0-2.9L50.35.95c.8-.8 2.1-.8 2.9 0 .8.8.8 2.1 0 2.9l-48.1 48.1v.1z' fill='%23262626'/%3E%3C/svg%3E"
          loading="lazy"
        />
      </div>
      <div class="btn btn--next">
        <img
          alt="Next image"
          src="data:image/svg+xml,%3Csvg viewBox='0 0 54 104' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M48.85 52.05l-48.1 48.1c-.8.8-.8 2.1 0 2.9.8.8 2.1.8 2.9 0l49.6-49.6c.8-.8.8-2.1 0-2.9L3.65.95c-.8-.8-2.1-.8-2.9 0-.8.8-.8 2.1 0 2.9l48.1 48.1v.1z' fill='%23262626'/%3E%3C/svg%3E"
        />
      </div>
      <div class="modal__image">
        <div class="sanity-image" width="" height="">
          <img
            alt="title"
            src={
              urlFor(artwork.image)
                .quality(70)
                .width(600)
                .url()}
            decoding="async"
            loading="lazy"
            width={}
            height={}
          />
        </div>
        <p class="modal__caption">
          {artwork.title} {artwork.date}<br />{artwork.medium.toLowerCase()}
        </p>
      </div>
    </div>
  </div>
</section>

<style lang="scss" scoped>
  @use '../styles/base/breakpoints' as b;
  @use '../styles/base/colors' as c;

  .gallery-section {
    position: relative;
    display: grid;
    place-content: center;
    background: c.$grey-000;
    height: calc(100vh - 4.4rem);
  }

  .modal {
    font-size: 1rem;
    &__image {
      font-size: 0.8vw;
      background: white;
      margin: auto;
      z-index: 7;
      height: calc(100vh - 11.9rem);
      width: 100%;
      object-fit: contain;
    }
    &__caption {
      margin: 1rem 0 0 0;
      font-size: 1.7rem;
      text-align: right;
      position: absolute;
      right: max(calc((100vw - 100rem) / 2), 6%);
      z-index: 7;
      @include b.mq(sm) {
        width: 100%;
        font-size: 1.5rem;
        right: 6%;
        bottom: 1rem;
      }
    }
  }

  .btn {
    width: 4rem;
    position: absolute;
    z-index: 9;
    cursor: pointer;
    opacity: 0.6;
    transition: opacity 0.3s ease;
    @include b.mq(sm) {
      display: none;
    }
    &:hover {
      opacity: 1;
      transition: opacity 0.3s ease;
    }
    &--next,
    &--prev {
      top: 50%;
      transform: translateY(-50%);
      width: 2.5rem;
    }
    &--next {
      right: 3em;
    }
    &--prev {
      left: 3em;
    }
  }

  .sanity-image {
    position: relative;
    display: grid;
    justify-content: center;
    object-fit: contain;
  }

  img {
    height: calc(100vh - 19.9rem);
    object-fit: contain;
    max-width: 70%;
    margin: auto;
    @include b.mq(sm) {
      max-width: 100%;
      width: 100%;
    }
  }

  .v-lazy-image {
    position: relative;
    opacity: 0;
    transition: opacity 1s;
    z-index: 2;
  }

  .v-lazy-image-loaded {
    opacity: 1;
  }
</style>
