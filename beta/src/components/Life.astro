---
import { toHTML } from "@portabletext/to-html"
import Exhibitions from "components/Exhibitions.astro"
import SanityImage from "components/SanityImage.astro"
import VideoEmbed from "components/VideoEmbed.astro"
import { Exhibition, Label, Page, Photography, Video } from "lib/interfaces"

const { exhibitions, labels, page, photography, videos } = Astro.props as {
  exhibitions: Exhibition[]
  labels: Label[]
  page: Page
  photography: Photography[]
  videos: Video[]
}
---

<section class="life">
  <div class="life__container">
    <div class="life__image">
      <SanityImage image={photography[0].image} alt={photography[0].title} />
    </div>
    <div class="life__text">
      <div
        as="div"
        set:html={toHTML(page.body.slice(0, 3))}
      ></div>
    </div>
  </div>
  <div class="life__container">
    <div class="life__text">
      <div
        as="div"
        set:html={toHTML(page.body.slice(3))}
      ></div>
    </div>
    <div class="life__image hide">
      <div class="sanity-image">
        <SanityImage image={photography[1].image} alt={photography[1].title} />
      </div>
    </div>
  </div>
  <div class="life__container full">
    <Exhibitions exhibitions={exhibitions} labels={labels} />
  </div>
</section>
<section class="video-section">
  <div class="video-wrapper">
    <VideoEmbed videos={videos} />
  </div>
</section>

<style lang="scss">
  @use '../styles/base/colors' as c;
  @use '../styles/base/breakpoints' as b;

  .sanity-image {
    position: relative;
    height: 100%;
    width: 100%;
    overflow: hidden;
  }

  .life {
    position: relative;
    display: flex;
    flex-direction: column;
    gap: 5rem;
    place-items: center;
    padding: 12rem 0 12rem 0;
    background: c.$grey-000;
    z-index: 0;
    @include b.mq(md) {
      flex-direction: column;
      height: unset;
      padding: 10rem 0;
      gap: 0;
    }
    @include b.mq(sm) {
      padding: 10rem 0 15rem;
    }
  }

  .life__container {
    width: min(100rem, 88%);
    margin: auto;
    display: grid;
    grid-template-columns: 1fr 1.5fr;
    div {
      padding-left: 6.5rem;
      &:first-child {
        padding-left: 0rem;
      }
      @include b.mq(md) {
        padding-left: 0;
      }
    }
    @include b.mq(md) {
      flex-direction: column;
      grid-template-columns: 1fr;
    }
  }

  .life__image {
    @include b.mq(md) {
      width: 75%;
      margin: 0 auto 6rem;
    }
    @include b.mq(sm) {
      width: 100%;
    }
  }

  .hide {
    @include b.mq(md) {
      display: none;
    }
  }

  .full {
    grid-template-columns: 1fr;
  }

  .video-section {
    position: relative;
    height: 100vh;
    width: 100vw;
    overflow: hidden;
  }

  .video-wrapper {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .video-embed {
    width: 100%;
    height: 100vh;
    object-fit: cover;
  }
</style>
